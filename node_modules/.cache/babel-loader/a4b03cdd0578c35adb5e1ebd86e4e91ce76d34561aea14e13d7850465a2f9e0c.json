{"ast":null,"code":"import { createSlice } from '@reduxjs/toolkit';\nexport const cartSlice = createSlice({\n  name: 'cart',\n  initialState: {\n    cartItems: []\n  },\n  reducers: {\n    // ДОБАВЛЯЕТ ОТДЕЛЬНЫМИ ПОЗИЦИЯМИ\n\n    // addItemToCart: (state, action) => {\n    //     state.cartItems.push({\n    //         itemId: action.payload.eachProduct.id,\n    //         itemQuantity: action.payload.quantity\n    //     })\n    // }\n\n    // ДОБАВЛЯЕТ ПО id - если есть товар с таким id, то увеличивает кол-во\n    addItemToCart: (state, action) => {\n      let alreadyInCart = state.cartItems.map(cartItem => consolecartItem.id);\n      console.log(cartItemId);\n\n      // const alreadyInCart = state.cartItems.find((cartItem, id) => action.payload.eachProduct.id === cartItem.id);\n      // console.log(alreadyInCart);\n\n      // ЕСЛИ ТОВАР С таким id уже есть в корзине:\n      // if (alreadyInCart) {\n\n      // } \n\n      // // ИНАЧЕ (когда товара с таким id нет в корзине) - добавляй в массий\n      // else {\n      state.cartItems.push({\n        itemId: action.payload.eachProduct.id,\n        itemQuantity: action.payload.quantity\n      });\n    }\n  }\n});\nexport const getCartItems = state => state.cart.cartItems;\nexport const {\n  addItemToCart\n} = cartSlice.actions;\nexport default cartSlice.reducer;","map":{"version":3,"names":["createSlice","cartSlice","name","initialState","cartItems","reducers","addItemToCart","state","action","alreadyInCart","map","cartItem","consolecartItem","id","console","log","cartItemId","push","itemId","payload","eachProduct","itemQuantity","quantity","getCartItems","cart","actions","reducer"],"sources":["/Users/Iriska/Desktop/redux_vv/src/redux/cartSlice.js"],"sourcesContent":["import { createSlice } from '@reduxjs/toolkit'\n\nexport const cartSlice = createSlice({\n  name: 'cart',\n  initialState: {\n    cartItems: [],\n  },\n  reducers: {\n    // ДОБАВЛЯЕТ ОТДЕЛЬНЫМИ ПОЗИЦИЯМИ\n\n    // addItemToCart: (state, action) => {\n    //     state.cartItems.push({\n    //         itemId: action.payload.eachProduct.id,\n    //         itemQuantity: action.payload.quantity\n    //     })\n    // }\n\n   // ДОБАВЛЯЕТ ПО id - если есть товар с таким id, то увеличивает кол-во\n    addItemToCart: (state, action) => {\n    let alreadyInCart = state.cartItems.map(cartItem => consolecartItem.id);\n        console.log(cartItemId)\n\n    // const alreadyInCart = state.cartItems.find((cartItem, id) => action.payload.eachProduct.id === cartItem.id);\n    // console.log(alreadyInCart);\n    \n    // ЕСЛИ ТОВАР С таким id уже есть в корзине:\n    // if (alreadyInCart) {\n        \n    // } \n    \n    // // ИНАЧЕ (когда товара с таким id нет в корзине) - добавляй в массий\n    // else {\n    state.cartItems.push({\n                itemId: action.payload.eachProduct.id,\n                itemQuantity: action.payload.quantity\n    })\n    }\n    }\n\n})\n\nexport const getCartItems = state => state.cart.cartItems;\nexport const { addItemToCart } = cartSlice.actions;\nexport default cartSlice.reducer;"],"mappings":"AAAA,SAASA,WAAW,QAAQ,kBAAkB;AAE9C,OAAO,MAAMC,SAAS,GAAGD,WAAW,CAAC;EACnCE,IAAI,EAAE,MAAM;EACZC,YAAY,EAAE;IACZC,SAAS,EAAE;EACb,CAAC;EACDC,QAAQ,EAAE;IACR;;IAEA;IACA;IACA;IACA;IACA;IACA;;IAED;IACCC,aAAa,EAAE,CAACC,KAAK,EAAEC,MAAM,KAAK;MAClC,IAAIC,aAAa,GAAGF,KAAK,CAACH,SAAS,CAACM,GAAG,CAACC,QAAQ,IAAIC,eAAe,CAACC,EAAE,CAAC;MACnEC,OAAO,CAACC,GAAG,CAACC,UAAU,CAAC;;MAE3B;MACA;;MAEA;MACA;;MAEA;;MAEA;MACA;MACAT,KAAK,CAACH,SAAS,CAACa,IAAI,CAAC;QACTC,MAAM,EAAEV,MAAM,CAACW,OAAO,CAACC,WAAW,CAACP,EAAE;QACrCQ,YAAY,EAAEb,MAAM,CAACW,OAAO,CAACG;MACzC,CAAC,CAAC;IACF;EACA;AAEJ,CAAC,CAAC;AAEF,OAAO,MAAMC,YAAY,GAAGhB,KAAK,IAAIA,KAAK,CAACiB,IAAI,CAACpB,SAAS;AACzD,OAAO,MAAM;EAAEE;AAAc,CAAC,GAAGL,SAAS,CAACwB,OAAO;AAClD,eAAexB,SAAS,CAACyB,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}