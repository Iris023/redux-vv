{"ast":null,"code":"import { createSlice } from '@reduxjs/toolkit';\nexport const cartSlice = createSlice({\n  name: 'cart',\n  initialState: {\n    cartItems: []\n  },\n  reducers: {\n    // ДОБАВЛЯЕТ ОТДЕЛЬНЫМИ ПОЗИЦИЯМИ\n\n    // addItemToCart: (state, action) => {\n    //     state.cartItems.push({\n    //         itemId: action.payload.eachProduct.id,\n    //         itemQuantity: action.payload.quantity\n    //     })\n    // }\n\n    // ДОБАВЛЯЕТ ПО id - если есть товар с таким id, то увеличивает кол-во\n\n    //    ВАРИАНТ 1\n    // addItemToCart: (state, action) => {\n    //     state.cartItems.find((item) => item.id === action.payload.eachProduct.id ? action.payload.quantity ++ : \n    //         state.cartItems.push({\n    //             itemId: action.payload.eachProduct.id,\n    //             itemQuantity: action.payload.quantity\n    //         })\n    //     )\n    // }\n\n    //    ВАРИАНТ 2\n    addItemToCart: (state, action) => {\n      const alreadyInCart = state.cartItems.find();\n    }\n  }\n});\nexport const getCartItems = state => state.cart.cartItems;\nexport const {\n  addItemToCart\n} = cartSlice.actions;\nexport default cartSlice.reducer;","map":{"version":3,"names":["createSlice","cartSlice","name","initialState","cartItems","reducers","addItemToCart","state","action","alreadyInCart","find","getCartItems","cart","actions","reducer"],"sources":["/Users/Iriska/Desktop/redux_vv/src/redux/cartSlice.js"],"sourcesContent":["import { createSlice } from '@reduxjs/toolkit'\n\nexport const cartSlice = createSlice({\n  name: 'cart',\n  initialState: {\n    cartItems: [],\n  },\n  reducers: {\n    // ДОБАВЛЯЕТ ОТДЕЛЬНЫМИ ПОЗИЦИЯМИ\n\n    // addItemToCart: (state, action) => {\n    //     state.cartItems.push({\n    //         itemId: action.payload.eachProduct.id,\n    //         itemQuantity: action.payload.quantity\n    //     })\n    // }\n\n   // ДОБАВЛЯЕТ ПО id - если есть товар с таким id, то увеличивает кол-во\n\n   //    ВАРИАНТ 1\n    // addItemToCart: (state, action) => {\n    //     state.cartItems.find((item) => item.id === action.payload.eachProduct.id ? action.payload.quantity ++ : \n    //         state.cartItems.push({\n    //             itemId: action.payload.eachProduct.id,\n    //             itemQuantity: action.payload.quantity\n    //         })\n    //     )\n    // }\n\n    //    ВАРИАНТ 2\n    addItemToCart: (state, action) => {\n        const alreadyInCart = state.cartItems.find()\n    }\n\n}\n\n})\n\nexport const getCartItems = state => state.cart.cartItems;\nexport const { addItemToCart } = cartSlice.actions;\nexport default cartSlice.reducer;"],"mappings":"AAAA,SAASA,WAAW,QAAQ,kBAAkB;AAE9C,OAAO,MAAMC,SAAS,GAAGD,WAAW,CAAC;EACnCE,IAAI,EAAE,MAAM;EACZC,YAAY,EAAE;IACZC,SAAS,EAAE;EACb,CAAC;EACDC,QAAQ,EAAE;IACR;;IAEA;IACA;IACA;IACA;IACA;IACA;;IAED;;IAEA;IACC;IACA;IACA;IACA;IACA;IACA;IACA;IACA;;IAEA;IACAC,aAAa,EAAE,CAACC,KAAK,EAAEC,MAAM,KAAK;MAC9B,MAAMC,aAAa,GAAGF,KAAK,CAACH,SAAS,CAACM,IAAI,EAAE;IAChD;EAEJ;AAEA,CAAC,CAAC;AAEF,OAAO,MAAMC,YAAY,GAAGJ,KAAK,IAAIA,KAAK,CAACK,IAAI,CAACR,SAAS;AACzD,OAAO,MAAM;EAAEE;AAAc,CAAC,GAAGL,SAAS,CAACY,OAAO;AAClD,eAAeZ,SAAS,CAACa,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}